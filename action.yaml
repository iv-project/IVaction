# SPDX-FileCopyrightText: 2006-2023, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2023, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0
description: "Standardized building for IV projects"

inputs:
  compiler:
    description: "which compiler to use \"gcc12-cpp20-release\", \"clang16-cpp17-debug\", etc"
    required: true
  cmake_flags:
    description: "additional cmake flags"
    required: false
    default: ""
  cmake_c_flags:
    description: "additional CMAKE_C_FLAGS"
    required: false
    default: ""
  cmake_cxx_flags:
    description: "additional CMAKE_CXX_FLAGS"
    required: false
    default: ""
  threads:
    description: "number of threads to use"
    required: false
    default: 1
  codecov_token:
    description: "codecov secret"
    required: false
    default: ""
  ctest_timeout:
    description: "ctest timeout value in seconds"
    required: false
    default: 7200
  age_of_last_commit:
    description: "warn if HEAD is old and has no tag (in days)"
    required: false
    default: 7
  cpm_dependency_file:
    description: "the dependency file that should be checked and updated"
    required: false
    default: "cpm.dependencies"
  github_token:
    description: "pass-through of the GITHUB token, needed by open_issue"
    required: false
    default: ""
  subfolder:
    description: "target is located in a subdirectory"
    required: false
    default: ""
  subfolders:
    description: "multiple targets each located in a different subdir (separated by spaces)"
    required: false
    default: ""


runs:
  using: 'composite'
  steps:
  - name: Checkout Repo
    uses: actions/checkout@v4
    with:
      path: repo
      submodules: recursive
      fetch-tags: true
  - name: Initialize environment
    shell: bash
    run: |
      echo "## Initialize environment"
      echo \"${GITHUB_ACTION}\" \"${GITHUB_REF}\" \"${GITHUB_BASE_REF}\" \"${GITHUB_RUN_NUMBER}\"

  - name: REUSE Compliance Check
    if: ${{ inputs.compiler == 'spdx_license_lint' }}
    uses: fsfe/reuse-action@v3
    with:
      args: --suppress-deprecation --root repo lint

  - name: Load MSVC Tools (Windows)
    uses: ilammy/msvc-dev-cmd@v1
    if: (runner.os == 'Windows')

  - name: run action
    shell: bash
    run: |
      echo "# Run action.sh"
      export CMAKE_FLAGS="${{ inputs.cmake_flags }}"
      export CMAKE_C_FLAGS="${{ inputs.cmake_c_flags }}"
      export CMAKE_CXX_FLAGS="${{ inputs.cmake_cxx_flags }}"
      export THREADS="${{ inputs.threads }}"
      export CODECOV_TOKEN="${{ inputs.codecov_token }}"
      export CTEST_TIMEOUT="${{ inputs.ctest_timeout }}"
      export AGE_OF_LAST_COMMIT="${{ inputs.age_of_last_commit }}"
      export CPM_DEPENDENCY_FILE="${{ inputs.cpm_dependency_file }}"
      export GITHUB_TOKEN="${{ inputs.github_token }}"
      export RUNNER_OS="${{ runner.os }}"
      export MATRIX_OS="${{ matrix.os }}"
      export ACTION_PATH="${{ github.action_path }}"
      export GITHUB_REF_NAME="${{ github.ref_name }}"
      export REPO_PATH="repo/${{ inputs.subfolder }}"
      export SUBFOLDERS="${{ inputs.subfolders }}"
      compilers=(${{ inputs.compiler }})
      for c in "${compilers[@]}"; do
        echo "######################
        echo "# Running ${c}"
        echo "######################
        ${ACTION_PATH}/action.sh "$c"
      done
  - name: read message (if available)
    shell: bash
    run: |
      if [ -e "message.txt" ]; then
        echo "MSSAGE=\"$(cat message.txt)\"" >> $GITHUB_ENV
      fi

  - name: Open Issue
    if: failure() && (endsWith(inputs.compiler, '-open_issue') || contains(inputs.compiler, '-open_issue-'))
    uses: jayqi/failed-build-issue-action@v1.2.0
    with:
      github-token: ${{ inputs.github_token }}
      always-create-new-issue: true
      title-template: ${{ env.MESSAGE }}
