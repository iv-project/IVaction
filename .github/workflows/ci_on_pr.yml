# SPDX-FileCopyrightText: 2006-2023, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2023, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0
name: "CI"

on:
  push:
    branches:
      - 'main'
  pull_request:

env:
  NANOBENCH_SUPPRESS_WARNINGS: 1
  TZ: Europe/Berlin

concurrency:
  group: ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-22.04, compiler: spdx_license_lint}
          - {os: ubuntu-22.04, compiler: gcc12-cpp20-release}
          - {os: ubuntu-22.04, compiler: gcc13-cpp20-release}
          - {os: ubuntu-22.04, compiler: gcc14-setup_only-lcov
                                         gcc14-nosetup-cpp11-release
                                         gcc14-nosetup-cpp14-release
                                         gcc14-nosetup-cpp17-release
                                         gcc14-nosetup-cpp20-release
                                         gcc14-nosetup-cpp23-release
                                         gcc14-nosetup-cpp20-lcov
                                         gcc14-nosetup-cpp20-debug-sanitize_address
                                         gcc14-nosetup-cpp20-debug-sanitize_undefined
                                         gcc14-nosetup-cpp20-debug-sanitize_thread
            }
          - {os: ubuntu-22.04, compiler: clang17-cpp20-release
                                         clang18-cpp20-release
                                         clang19-cpp20-release
                                         clang20-cpp20-release
            }
          - {os: ubuntu-22.04, compiler: emscripten-cpp20-release, cmake_flags: "-DCMAKE_EXE_LINKER_FLAGS='-fexceptions -sSTACK_SIZE=1000000'", cmake_cxx_flags: "-Wno-c++11-narrowing -fexceptions"}
          - {os: ubuntu-22.04, compiler: intel-cpp20-release}
          - {os: macos-13,     compiler: gcc14-cpp20-release}
          - {os: macos-13,     compiler: clang19-cpp20-release}
          - {os: macos-13,     compiler: clang20-cpp20-release}
          - {os: macos-14,     compiler: gcc14-cpp20-release}
          - {os: macos-14,     compiler: clang20-cpp20-release}
          - {os: windows-2022, compiler: msvc-cpp20-release
                                         msvc-cpp20-debug-sanitize_address
                                         msvc-cpp20-relwithdebinfo-sanitize_address
                                         msvc-cpp20-debug
            }
    steps:
      - name: Standard IV-project testing
        uses: iv-project/IVaction@9a3b1b30454dae7142885d4dec61d3a9c2c5b8e4
        with:
          compiler: ${{ matrix.compiler }}
          threads: 2
          cmake_flags: ${{ matrix.cmake_flags }}
          cmake_c_flags: ${{ matrix.cmake_c_flags }}
          cmake_cxx_flags: ${{ matrix.cmake_cxx_flags }}
          subfolders: "test-project test-project2"
  final:
    runs-on: ubuntu-22.04
    name: final-pass
    needs: build
    if: always()
    steps:
      - name: Succeeded
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: CI failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
