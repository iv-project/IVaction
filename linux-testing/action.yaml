# SPDX-FileCopyrightText: 2006-2023, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2023, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0
name: "Linux"
description: "Standardized building for IV projects"

env:
  TZ: Europe/Berlin

inputs:
  name:
    description: "Name of this configuration, used for ccache"
    required: true
  cc:
    description: "CC tool"
    required: true
  cxx:
    description: "CPP tool"
    required: true
  cxx_flags:
    description: "additional cxx flags"
    required: false
    default: ""
  cmake_flags:
    description: "additional cmake flags"
    required: false
    default: ""
  brew_pkgs:
    description: "required brew packages"
    required: false
    default: ""
  build_type:
    description: "CMake build type"
    required: true
runs:
  using: 'composite'
  steps:
   - name: Checkout Repo
     uses: actions/checkout@v4
     with:
       path: repo
       submodules: recursive
   - name: Install Tools on Ubuntu
     shell: bash
     run: |
        echo \"${GITHUB_ACTION}\" \"${GITHUB_REF}\" \"${GITHUB_BASE_REF}\" \"${GITHUB_RUN_NUMBER}\"
        NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ${HOME}/.activate_brew
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        sudo apt-get update -y
        sudo apt-get install -y build-essential libfmt-dev
        brew install --force-bottle ${{ inputs.brew_pkgs }}
   - name: Tool versions
     shell: bash
     run: |
       source ${HOME}/.activate_brew
       env cmake --version
       env ${{ inputs.cxx }} --version
   - name: Configure tests
     shell: bash
     env:
       CXX: ${{ inputs.cxx }}
       CC: ${{ inputs.cc }}
     run: |
       source ${HOME}/.activate_brew
       mkdir build
       cd build
       cmake ../repo -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} \
                     -DCMAKE_CXX_FLAGS="${{ inputs.cxx_flags }}" \
                     ${{ inputs.cmake_flags }}
   - name: Build tests
     shell: bash
     run: |
       source ${HOME}/.activate_brew
       cd build
       make -k -j2
   - name: Run tests
     shell: bash
     run: |
       cd build
       ctest . -j2 --output-on-failure --timeout 240 || ctest . -j2 --output-on-failure --timeout 240 --rerun-failed
